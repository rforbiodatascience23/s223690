---
title: "04_describe"
format:
  html:
    embed-resources: true
editor: visual
---

# Load packages

```{r}
library(tidyverse)
library(DESeq2)
library(umap)
library(ggplot2)

```

```{r UMAP}
# Assuming you have your RNA-seq data loaded into a matrix called 'expression_data'
# Rows are genes and columns are samples

# Perform UMAP dimensionality reduction
umap_result <- umap(raw_data)

new_names_umap <- c("UMAP1", "UMAP2")

colnames(umap_result)[1] <- new_names_umap[1]


# Visualize the UMAP embedding
ggplot(as.data.frame(umap_result$layout), aes(x = ([,1]), y = ([,2])) +
  geom_point() +
  theme_minimal()

```


#Visual representation

```{r VST and PCA plot}
#VST for the PCA plot
dds <- estimateSizeFactors(dds)

vst <- vst(dds, blind = FALSE)

sampleDists <- dist(t(assay(vst)))

#PHeatMap with the distances
sampleDistMatrix <- as.matrix(sampleDists)

colors <- colorRampPalette(rev(brewer.pal(9, "Blues")))(255)

#jpeg("distance_heatmap.jpeg")

pheatmap_distances <- pheatmap(sampleDistMatrix, 
                               clustering_distance_rows = sampleDists, 
                               clustering_distance_cols = sampleDists, 
                               col = colors,
                               main = "Heatmap of sample-to-sample distances using the variance stabilizing transformed values")

#dev.off()

plotPCA(vst)
```

#Start the DESeq analysis

```{r Perform DESeq2 analysis of the normalised counts}
# Run DESeq2 analysis
dds <- DESeq(dds)

# Extract differential expression results
res <- results(dds)
res <- data.frame(res)
```

```{r Check the DE genes}
#Get the differentially expressed genes
de_genes <- subset(res, padj < 0.1)
de_genes <- subset(de_genes, log2FoldChange > 3 | log2FoldChange < -3)
de_genes <- subset(de_genes, !is.na(padj))
```


