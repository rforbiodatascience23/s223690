---
title: "03_argument"
format:
  html:
    embed-resources: true
editor: visual
---

# Load packages

```{r}
library(tidyverse)
library(DESeq2)
```

#Start the DESeq analysis

```{r Create the DESeq input (DESeq matrix)}
# Set the sample names
sample_names <- colnames(raw_data)

# Set the sample conditions
sample_condition <- strsplit(sample_names, "_")
sample_condition <- sapply(sample_condition, function(x) x[1])

# Create a data frame with sample information
DESeq_matrix <- data.frame(sampleName = sample_names, 
                           fileName = t(raw_data),
                           condition = sample_condition)

#Set the conditions so we can perform DESeq2 afterwards
# Convert raw_data to a matrix
count_matrix <- as.matrix(raw_data)

# Create a DESeqDataSet object. The round(count_matrix) help to have non-negative integers.
dds <- DESeqDataSetFromMatrix(countData = round(count_matrix),
                              colData = DESeq_matrix,
                              design = ~ condition)

#Get rid of the genes that have very low count
dds <- dds[ rowSums(counts(dds)) > 10, ]
```