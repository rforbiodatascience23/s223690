---
title: "05_analysis_1"
format:
  html:
    embed-resources: true
editor: visual
---

# Load packages

```{r}
library(pheatmap)
library(viridis)
```

# Load the data

```{r Load the data}
setwd("C:/Users/marin/OneDrive/Documentos/GitHub/s223690/R")

de_genes <- read.delim("../data/de_genes.tsv", 
                         row.names = 1, 
                         stringsAsFactors = FALSE)

vst <- readRDS("../data/vst.rds")
```

# Visual representation

A heatmap is a good way of having a qualitative point of view from the data we are working on. In this case we want to see if the genes that are deferentially expressed in the tumor cells are expressed in the normal cells and viceversa.

```{r Heatmap}
#Just consider the genes that were DE ans VST
de_genes_names <- unique(c(rownames(de_genes)))

de_genes_vst <- vst[rownames(vst) %in% de_genes_names, ]

de_genes_vst_matrix <- assay(de_genes_vst)


#Since we will have to create a quantile scale in the colouring of the map, it is necessary to calculate the z-score.
z_scores <- scale(de_genes_vst_matrix)

# Define breaks and labels for the quantile scale (putting the function, it doesn't really matter the name of the variable)
quantile_breaks <- function(z_scores, n = 10) {
  breaks <- quantile(z_scores, probs = seq(0, 1, length.out = n), na.rm = TRUE)
  breaks[!duplicated(breaks)]
}

breaks <- quantile_breaks(z_scores, n = 11)

# Create a heatmap using pheatmap with a specified color palette
jpeg("../results/heatmap.png", width = 1100, height = 600, res = 100)

pheatmap(t(z_scores),
         #annotation_row = annotation_row_4,
         cluster_rows = TRUE,
         cluster_cols = TRUE,
         main = "Heatmap of DE genes",
         breaks = breaks,
         color = viridis(10),
         fontsize_row = 8,
         show_colnames = FALSE,
         border_color = "NA",

)

dev.off()
```

It is pretty cleat that inside the heatmap there are two main groups, so we can conclude that the two groups express different DE genes.
